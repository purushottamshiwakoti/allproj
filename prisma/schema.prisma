// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ROLE {
  SUPERADMIN
  ADMIN
  SUBADMIN
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName   String
  email      String    @unique
  password   String
  role       ROLE
  projects   Project[] @relation(fields: [projectIds], references: [id])
  projectIds String[]  @db.ObjectId
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Project {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  slug       String   @unique
  folderIds  String[] @db.ObjectId
  folders    Folder[] @relation(fields: [folderIds], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      User[]   @relation(fields: [userIds], references: [id])
  userIds    String[] @db.ObjectId
}

model Folder {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  slug       String      @unique
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  project    Project[]   @relation(fields: [projectIds], references: [id])
  projectIds String[]    @db.ObjectId
  subFolder  SubFolder[]
  userId     String?     @db.ObjectId
}

model SubFolder {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  slug       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  folder     Folder?  @relation(fields: [folderId], references: [id])
  folderId   String?  @db.ObjectId
  Files      Files[]
}

model Files {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  subFolder   SubFolder? @relation(fields: [subFolderId], references: [id])
  subFolderId String?    @db.ObjectId
}
